name: Autograding Tests
'on':
- workflow_dispatch
- repository_dispatch
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Grade D
      id: grade-d
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Grade D
        setup-command: ''
        command: FINAL_SCORE=$(cat pcb_score.txt | tr -dc '0-9'); [ "$FINAL_SCORE"
          -gt 50 ] && echo "1"
        input: ''
        expected-output: '1'
        comparison-method: exact
        timeout: 10
        max-score: 25
    - name: Grade C
      id: grade-c
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Grade C
        setup-command: ''
        command: FINAL_SCORE=$(cat pcb_score.txt | tr -dc '0-9'); [ "$FINAL_SCORE"
          -gt 80 ] && echo "1"
        input: ''
        expected-output: '1'
        comparison-method: exact
        timeout: 10
        max-score: 25
    - name: Grade B
      id: grade-b
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Grade B
        setup-command: ''
        command: FINAL_SCORE=$(cat pcb_score.txt | tr -dc '0-9'); [ "$FINAL_SCORE"
          -gt 95 ] && echo "1"
        input: ''
        expected-output: '1'
        comparison-method: exact
        timeout: 10
        max-score: 25
    - name: Grade A
      id: grade-a
      uses: classroom-resources/autograding-io-grader@v1
      with:
        test-name: Grade A
        setup-command: ''
        command: FINAL_SCORE=$(cat pcb_score.txt | tr -dc '0-9'); [ "$FINAL_SCORE"
          -eq 100 ] && echo "1"
        input: ''
        expected-output: '1'
        comparison-method: exact
        timeout: 10
        max-score: 25
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        GRADE-D_RESULTS: "${{steps.grade-d.outputs.result}}"
        GRADE-C_RESULTS: "${{steps.grade-c.outputs.result}}"
        GRADE-B_RESULTS: "${{steps.grade-b.outputs.result}}"
        GRADE-A_RESULTS: "${{steps.grade-a.outputs.result}}"
      with:
        runners: grade-d,grade-c,grade-b,grade-a
